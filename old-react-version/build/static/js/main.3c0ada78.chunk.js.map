{"version":3,"sources":["Reciplier.module.css","logo.svg","Reciplier.js","App.js","index.js"],"names":["module","exports","reciplier-container","mb-2","mb-4","mb-6","mr-2","ml-2","mx-1","p-1","p-2","p-3","p-4","px-1","px-3","py-0.5","py-2","text-2xl","text-base","text-sm","text-xs","font-bold","font-medium","font-mono","text-center","text-gray-400","text-gray-600","text-gray-700","text-gray-800","text-gray-300","flex","flex-grow","items-center","justify-between","inline-flex","bg-gray-50","bg-gray-100","bg-gray-200","border","rounded","rounded-lg","constant","recipe-output","w-20","w-full","h-2","h-40","bg-blue-500","hover:bg-blue-600","text-white","notification","fadeIn","hover:text-gray-600","mt-1","relative","__webpack_require__","p","formatDisplayNumber","num","isNaN","formatted","toFixed","replace","endsWith","slice","RecipeScaler","exampleRecipes","Shortcake","Soule-Reeves Crepes","Camelot Chocolate Chip Cookies","Blank","recipeText","setRecipeText","useState","parsedRecipe","setParsedRecipe","originalValues","setOriginalValues","scalingFactor","setScalingFactor","activeField","setActiveField","editingValue","setEditingValue","currentExampleKey","setCurrentExampleKey","setNotification","notificationTimeout","setNotificationTimeout","useEffect","showNotification","message","clearTimeout","timeout","setTimeout","parseFraction","fractionStr","includes","numerator","denominator","split","parseFloat","trim","blankKey","Object","keys","find","key","numberRegex","lines","parsedLines","original","forEach","line","lineIndex","push","id","concat","content","segments","text","isNumber","lastIndex","match","matchIndex","regex","RegExp","exec","fullMatch","equalsPrefix","numberStr","startPos","index","isConstant","substring","value","originalIndex","length","matchingKey","handleBlur","numValue","handleNumberChange","handleInputChange","e","target","handleKeyPress","blur","segmentId","newValue","originalValue","segment","console","warn","newParsedRecipe","map","_objectSpread","seg","newOriginalValues","renderNumberField","scaledValue","displayValue","React","createElement","type","onChange","onFocus","handleFocus","onBlur","onKeyPress","className","styles","selectedKey","hasOwnProperty","disabled","onClick","resetScaling","placeholder","min","max","step","i","renderConstant","handleCopyToClipboard","navigator","clipboard","scaledText","join","writeText","then","catch","err","error","href","rel","title","require","version","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3c0ada78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reciplier-container\":\"Reciplier_reciplier-container__sQ-bx\",\"mb-2\":\"Reciplier_mb-2__2KvNF\",\"mb-4\":\"Reciplier_mb-4__3YSPF\",\"mb-6\":\"Reciplier_mb-6__1U6Xl\",\"mr-2\":\"Reciplier_mr-2__3yLru\",\"ml-2\":\"Reciplier_ml-2__9-3Oj\",\"mx-1\":\"Reciplier_mx-1__3fHw_\",\"p-1\":\"Reciplier_p-1__19r7L\",\"p-2\":\"Reciplier_p-2__1tRuS\",\"p-3\":\"Reciplier_p-3__1qJX6\",\"p-4\":\"Reciplier_p-4__1yXhG\",\"px-1\":\"Reciplier_px-1__3pK5g\",\"px-3\":\"Reciplier_px-3__1xT0X\",\"py-0.5\":\"Reciplier_py-0.5__NjaYd\",\"py-2\":\"Reciplier_py-2__iGg9R\",\"text-2xl\":\"Reciplier_text-2xl__Ne3xr\",\"text-base\":\"Reciplier_text-base__75XI2\",\"text-sm\":\"Reciplier_text-sm__OqZ-K\",\"text-xs\":\"Reciplier_text-xs__3vYZi\",\"font-bold\":\"Reciplier_font-bold__1ByBj\",\"font-medium\":\"Reciplier_font-medium__3Sj3S\",\"font-mono\":\"Reciplier_font-mono__2gIW9\",\"text-center\":\"Reciplier_text-center__39srh\",\"text-gray-400\":\"Reciplier_text-gray-400__3IOaf\",\"text-gray-600\":\"Reciplier_text-gray-600__2A5wG\",\"text-gray-700\":\"Reciplier_text-gray-700__1wDqN\",\"text-gray-800\":\"Reciplier_text-gray-800__2S4rO\",\"text-gray-300\":\"Reciplier_text-gray-300__2MEYI\",\"flex\":\"Reciplier_flex__IQFYl\",\"flex-grow\":\"Reciplier_flex-grow__1ocTA\",\"items-center\":\"Reciplier_items-center__2WJvp\",\"justify-between\":\"Reciplier_justify-between__aQsaD\",\"inline-flex\":\"Reciplier_inline-flex__1QxiR\",\"bg-gray-50\":\"Reciplier_bg-gray-50__1aAYI\",\"bg-gray-100\":\"Reciplier_bg-gray-100__1LG2J\",\"bg-gray-200\":\"Reciplier_bg-gray-200__3YaWz\",\"border\":\"Reciplier_border__YEVBi\",\"rounded\":\"Reciplier_rounded__3nlQK\",\"rounded-lg\":\"Reciplier_rounded-lg__rg-Ks\",\"constant\":\"Reciplier_constant__23NKi\",\"recipe-output\":\"Reciplier_recipe-output__1F1tw\",\"w-20\":\"Reciplier_w-20__2WJTl\",\"w-full\":\"Reciplier_w-full__19kCz\",\"h-2\":\"Reciplier_h-2__KijhF\",\"h-40\":\"Reciplier_h-40__3h2_7\",\"bg-blue-500\":\"Reciplier_bg-blue-500__2gjTb\",\"hover:bg-blue-600\":\"Reciplier_hover:bg-blue-600__215Hy\",\"text-white\":\"Reciplier_text-white__2eF27\",\"notification\":\"Reciplier_notification__1Qt38\",\"fadeIn\":\"Reciplier_fadeIn__1m0f7\",\"hover:text-gray-600\":\"Reciplier_hover:text-gray-600__3HQHS\",\"mt-1\":\"Reciplier_mt-1__1KidE\",\"relative\":\"Reciplier_relative__1GN0T\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState, useEffect } from 'react';\nimport styles from './Reciplier.module.css'; // Import the CSS module\n\n// Helper function to format numbers for display\nconst formatDisplayNumber = (num) => {\n  if (typeof num !== 'number' || isNaN(num)) {\n    return ''; // Or some other placeholder for invalid numbers\n  }\n  let formatted = num.toFixed(4).replace(/\\.?0+$/, '');\n  if (formatted.endsWith('.')) {\n    formatted = formatted.slice(0, -1);\n  }\n  return formatted;\n};\n\n// Pancakes (according to Claude)\n//\n// 1 cup all-purpose flour\n// 2 tablespoons sugar\n// 2 teaspoons baking powder\n// 1/2 teaspoon salt\n// 1 cup milk\n// 1 large egg\n// 2 tablespoons vegetable oil\n// \n// Mix dry ingredients. Combine wet ingredients separately, then add to dry. \n// Cook on a greased griddle at =350°F for about =2 minutes per side until golden.\n// \n// Makes 8 pancakes, =120 calories each.\n\nconst RecipeScaler = () => {\n  // Example recipes\n  const exampleRecipes = {\n    \"Shortcake\": `\\\nPreheat oven to =325°F. Line bottom of =9x9 square pan with parchment paper.\n\n* 2   C   flour (can do half/half cake flour)\n* 1   C   sugar\n* 1/2 C   butter (1 stick)\n* 2   tsp baking powder\n* 1/2 tsp salt\n* 3/4 C   milk\n* 1   tsp vanilla\n\nMix together dry ingredients. Add cold butter cut up into pieces and then cut into the flour as for making pastry, until it resembles coarse crumbs.\n\nAdd milk and vanilla and mix well.\n\nPour into the prepared cake pan, spread evenly. \n\nBake =30 to =40 minutes @ =325°F`,\n    \"Soule-Reeves Crepes\": `\\\n* eggs: 12 large ones\n* milk: 5.333 cups (1.2618 liters or 1300 grams)\n* flour: 3 cups (400 grams)\n* butter: 8 tbsp melted (112 grams)\n* salt: 2 tsp (14 grams) \n\nYield: roughly 29 crepes`,\n    \"Camelot Chocolate Chip Cookies\": `\\\n* 1 cup granulated sugar\n* 1 cup brown sugar\n* 1 cup butter, softened\n* 2 eggs\n* 1.5 teaspoons vanilla\n* 1 teaspoon baking soda\n* 1 teaspoon salt\n* 3 cups all purpose flour\n* 12 ounces semi-sweet chocolate chips (danthany version: half semi-sweet and half milk chocolate)\n\nPlace sugar, butter, eggs, and vanilla in mixer bowl. Attach bowl and flat beater to mixer. Turn to speed =2 and mix about =30 seconds. Stop and scrape bowl. \n\nTurn to Stir Speed. Gradually add baking soda, salt, and flour to sugar mixture and mix about =2 minutes. Turn to speed =2 and mix about =30 seconds. Stop and scrape bowl. Add chocolate chips. Turn to Stir Speed and mix about =15 seconds. \n\nDrop rounded teaspoonfuls onto greased baking sheets, about =2 inches apart. Bake at =375 F for =10 to =12 minutes. Remove from backing sheets *immediately* and cool on wire racks. \n\nYield: 54 cookies, =117 cal (=17g carb) per cookie.`,\n    \"Blank\": \"\",\n  };\n\n  const [recipeText, setRecipeText] = useState('');\n  const [parsedRecipe, setParsedRecipe] = useState([]);\n  const [originalValues, setOriginalValues] = useState([]);\n  const [scalingFactor, setScalingFactor] = useState(1);\n  const [activeField, setActiveField] = useState(null);\n  const [editingValue, setEditingValue] = useState('');\n  const [currentExampleKey, setCurrentExampleKey] = useState(\"Shortcake\");\n  const [notification, setNotification] = useState('');\n  const [notificationTimeout, setNotificationTimeout] = useState(null);\n\n  // Set default recipe on initial load\n  useEffect(() => {\n    // Load Shortcake by default\n    if (!recipeText && exampleRecipes[\"Shortcake\"]) {\n      setRecipeText(exampleRecipes[\"Shortcake\"]);\n    }\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Show a temporary notification\n  const showNotification = (message) => {\n    setNotification(message);\n    if (notificationTimeout) {\n      clearTimeout(notificationTimeout);\n    }\n    const timeout = setTimeout(() => setNotification(''), 2000);\n    setNotificationTimeout(timeout);\n  };\n\n  // Helper function to convert fraction strings to decimal\n  const parseFraction = (fractionStr) => {\n    if (fractionStr.includes('/')) {\n      const [numerator, denominator] = fractionStr.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n    return parseFloat(fractionStr);\n  };\n\n  // Parse the recipe text to identify all numbers\n  useEffect(() => {\n    if (!recipeText.trim()) {\n      setParsedRecipe([]);\n      setOriginalValues([]);\n      // If recipeText is blank, update dropdown to show \"Blank\" or placeholder\n      const blankKey = Object.keys(exampleRecipes).find(key => exampleRecipes[key] === recipeText.trim());\n      if (blankKey) {\n        setCurrentExampleKey(blankKey);\n      } else {\n        setCurrentExampleKey(\"\"); // Set to placeholder if custom text not matching \"Blank\"\n      }\n      return;\n    }\n    \n    const numberRegex = /(?:(\\=)?)(\\d+(?:\\.\\d+)?(?:\\/\\d+)?)/g;\n    \n    const lines = recipeText.split('\\n');\n    const parsedLines = [];\n    const original = [];\n    \n    lines.forEach((line, lineIndex) => {\n      if (!line.trim()) {\n        parsedLines.push({ id: `line-${lineIndex}`, content: line, segments: [{ text: line, isNumber: false }] });\n        return;\n      }\n      \n      let lastIndex = 0;\n      const segments = [];\n      let match;\n      let matchIndex = 0;\n      \n      const regex = new RegExp(numberRegex);\n      while ((match = regex.exec(line)) !== null) {\n        const fullMatch = match[0];\n        const equalsPrefix = match[1] || '';\n        const numberStr = match[2];\n        const startPos = match.index;\n        const isConstant = equalsPrefix === '=';\n        \n        if (startPos > lastIndex) {\n          segments.push({ \n            text: line.substring(lastIndex, startPos), \n            isNumber: false \n          });\n        }\n        \n        const value = parseFraction(numberStr);\n        if (!isNaN(value)) {\n          if (isConstant) {\n            segments.push({\n              text: numberStr,\n              isNumber: false,\n              isConstant: true\n            });\n          } else {\n            const id = `num-${lineIndex}-${matchIndex}`;\n            segments.push({ \n              id,\n              originalIndex: original.length,\n              text: numberStr, \n              value,\n              isNumber: true \n            });\n            original.push(value);\n          }\n        } else {\n          segments.push({ \n            text: fullMatch, \n            isNumber: false \n          });\n        }\n        \n        lastIndex = startPos + fullMatch.length;\n        matchIndex++;\n      }\n      \n      if (lastIndex < line.length) {\n        segments.push({ \n          text: line.substring(lastIndex), \n          isNumber: false \n        });\n      }\n      \n      parsedLines.push({\n        id: `line-${lineIndex}`,\n        content: line,\n        segments\n      });\n    });\n    \n    setParsedRecipe(parsedLines);\n    setOriginalValues(original);\n    setScalingFactor(1);\n\n    let matchingKey = \"\";\n    for (const key in exampleRecipes) {\n      if (exampleRecipes[key] === recipeText) {\n        matchingKey = key;\n        break;\n      }\n    }\n    setCurrentExampleKey(matchingKey);\n\n  }, [recipeText]);\n\n  // Focus handler for input fields\n  const handleFocus = (segmentId, value) => {\n    setActiveField(segmentId);\n    setEditingValue(formatDisplayNumber(value)); // Use helper\n  };\n\n  // Blur handler for input fields\n  const handleBlur = () => {\n    if (activeField && editingValue) {\n      const numValue = parseFloat(editingValue);\n      if (!isNaN(numValue) && numValue > 0) {\n        handleNumberChange(activeField, numValue);\n      }\n    }\n    setActiveField(null);\n  };\n\n  // Input change handler\n  const handleInputChange = (e) => {\n    setEditingValue(e.target.value);\n  };\n\n  // Key press handler for input fields\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.target.blur();\n    }\n  };\n\n  // Handle number change and scale all other numbers\n  const handleNumberChange = (segmentId, newValue) => {\n    const numValue = parseFloat(newValue);\n    if (isNaN(numValue) || numValue <= 0) return;\n    \n    let originalIndex = -1;\n    let originalValue = 0;\n    \n    for (const line of parsedRecipe) {\n      for (const segment of line.segments) {\n        if (segment.id === segmentId) {\n          originalIndex = segment.originalIndex;\n          break;\n        }\n      }\n      if (originalIndex !== -1) break;\n    }\n    \n    if (originalIndex === -1 || originalIndex >= originalValues.length) return; // Added boundary check\n    originalValue = originalValues[originalIndex];\n    \n    if (originalValue === 0 && numValue !== 0) { // Avoid division by zero if original is 0 but new is not\n        // Decide how to handle this case, e.g., set scaling factor to a default or based on other numbers\n        // For now, let's just prevent division by zero and not scale\n        console.warn(\"Original value is 0, cannot calculate scaling factor.\");\n        // Optionally, update the specific number directly without scaling others\n        // This part needs careful consideration based on desired behavior\n        const newParsedRecipe = parsedRecipe.map(line => ({\n            ...line,\n            segments: line.segments.map(seg => {\n                if (seg.id === segmentId) {\n                    return { ...seg, value: numValue }; // Directly update value\n                }\n                return seg;\n            })\n        }));\n        setParsedRecipe(newParsedRecipe);\n        // Update originalValues as well if this change should be the new base\n        const newOriginalValues = [...originalValues];\n        newOriginalValues[originalIndex] = numValue;\n        setOriginalValues(newOriginalValues);\n        return; \n    } else if (originalValue === 0 && numValue === 0) {\n        // If both are zero, scaling factor remains unchanged (or 1 if it was reset)\n        return;\n    }\n\n\n    const newScalingFactor = numValue / originalValue;\n    setScalingFactor(newScalingFactor);\n  };\n\n  // Reset to original values\n  const resetScaling = () => {\n    setScalingFactor(1);\n  };\n\n  // Load example recipe\n  const handleExampleChange = (e) => {\n    const selectedKey = e.target.value;\n    setCurrentExampleKey(selectedKey);\n    if (exampleRecipes.hasOwnProperty(selectedKey)) {\n      setRecipeText(exampleRecipes[selectedKey]);\n    }\n  };\n\n  // Generate scaled recipe text for copying\n  const getScaledRecipeText = () => {\n    return parsedRecipe.map(line => {\n      return line.segments.map(segment => {\n        if (segment.isNumber) {\n          return formatDisplayNumber(segment.value * scalingFactor);\n        }\n        if (segment.isConstant) {\n          return '=' + segment.text;\n        }\n        return segment.text;\n      }).join('');\n    }).join('\\n');\n  };\n\n  // Handle copy to clipboard\n  const handleCopyToClipboard = () => {\n    if (!navigator.clipboard) {\n      showNotification('Clipboard access not available');\n      return;\n    }\n\n    const scaledText = getScaledRecipeText();\n    navigator.clipboard.writeText(scaledText)\n      .then(() => {\n        showNotification('Recipe copied!');\n      })\n      .catch(err => {\n        console.error('Failed to copy text: ', err);\n        showNotification('Failed to copy recipe');\n      });\n  };\n\n  // Render a number field, handling active editing state\n  const renderNumberField = (segment) => {\n    const scaledValue = segment.value * scalingFactor;\n    const isActive = activeField === segment.id;\n    \n    let displayValue;\n    if (isActive) {\n      displayValue = editingValue;\n    } else {\n      displayValue = formatDisplayNumber(scaledValue); // Use helper\n    }\n    \n    return (\n      <input\n        type=\"text\"\n        value={displayValue}\n        onChange={handleInputChange}\n        onFocus={() => handleFocus(segment.id, scaledValue)}\n        onBlur={handleBlur}\n        onKeyPress={handleKeyPress}\n        className={`${styles['w-20']} ${styles['p-1']} ${styles.border} ${styles.rounded} ${styles['text-center']} ${styles['mx-1']}`}\n      />\n    );\n  };\n\n  // Render a constant (non-scaling) number with a subtle highlight\n  const renderConstant = (segment) => {\n    return (\n      <span className={`${styles.constant} ${styles['px-1']} ${styles['py-0.5']}`} >{segment.text}</span>\n    );\n  };\n\n  return (\n    <div className={styles['reciplier-container']}> \n      <h1 className={`${styles['text-2xl']} ${styles['font-bold']} ${styles['mb-4']}`}>Reciplier</h1>\n      \n      <div className={styles['mb-6']}>\n        <div className={`${styles.flex} ${styles['justify-between']} ${styles['items-center']} ${styles['mb-2']}`}>\n          <select \n            onChange={handleExampleChange}\n            value={currentExampleKey} \n            className={`${styles['p-2']} ${styles.border} ${styles.rounded} ${styles['text-gray-700']}`}\n          >\n            {currentExampleKey === \"\" && <option value=\"\" disabled>Example Recipes</option>}\n            {Object.keys(exampleRecipes).map(key => (\n              <option key={key} value={key}>\n                {key === \"Blank\" ? \"Blank -- paste any recipe below!\" : key}\n              </option>\n            ))}\n          </select>\n          \n          <button \n            onClick={resetScaling}\n            className={`${styles['text-sm']} ${styles['px-3']} ${styles['py-2']} ${styles.rounded} ${styles['ml-2']} ${styles['bg-gray-100']} ${styles['hover:bg-gray-200']} ${styles['text-gray-800']}`}\n            disabled={scalingFactor === 1 && currentExampleKey !== \"\" && exampleRecipes[currentExampleKey] === recipeText}\n          >\n            Reset Scaling\n          </button>\n        </div>\n        <textarea \n          className={`${styles['w-full']} ${styles['p-3']} ${styles.border} ${styles.rounded} ${styles['h-40']}`}\n          value={recipeText}\n          onChange={(e) => setRecipeText(e.target.value)}\n          placeholder=\"Paste your recipe here... (Tip: Add = before numbers that shouldn't scale, like =350 for oven temperature)\"\n        />\n      </div>\n      \n      <div className={styles['mb-4']}>\n        <div className={`${styles.flex} ${styles['items-center']} ${styles['justify-between']} ${styles['mb-2']}`}>\n          <span className={`${styles['text-sm']} ${styles['font-medium']}`}>Scale Recipe:</span>\n          {/* Use the helper function for scalingFactor display */}\n          <span className={`${styles['text-sm']} ${styles['font-bold']}`}>{formatDisplayNumber(scalingFactor)}x</span>\n        </div>\n        <div className={`${styles.flex} ${styles['items-center']}`}>\n          <span className={`${styles['text-xs']} ${styles['mr-2']}`}>0.1x</span>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"10\"\n            step=\"0.1\"\n            value={scalingFactor}\n            onChange={(e) => setScalingFactor(parseFloat(e.target.value))}\n            className={`${styles['flex-grow']} ${styles['h-2']} ${styles['bg-gray-200']} ${styles['rounded-lg']} ${styles['appearance-none']} ${styles['cursor-pointer']}`}\n          />\n          <span className={`${styles['text-xs']} ${styles['ml-2']}`}>10x</span>\n        </div>\n      </div>\n      \n      {parsedRecipe.length > 0 && (\n        <div>\n          <div className={`${styles['bg-gray-50']} ${styles['p-4']} ${styles.rounded} ${styles['recipe-output']} ${styles['mb-4']}`}>\n            {parsedRecipe.map((line) => (\n              <div key={line.id} className={styles['mb-2']}>\n                <span className={`${styles['font-mono']} ${styles['text-base']}`}>\n                  {line.segments.map((segment, i) => (\n                    segment.isNumber ? (\n                      <span key={i} className={`${styles['inline-flex']} ${styles['items-center']}`}>\n                        {renderNumberField(segment)}\n                      </span>\n                    ) : segment.isConstant ? (\n                      <span key={i} className={`${styles['inline-flex']} ${styles['items-center']}`}>\n                        {renderConstant(segment)}\n                      </span>\n                    ) : (\n                      <span key={i}>{segment.text}</span>\n                    )\n                  ))}\n                </span>\n              </div>\n            ))}\n          </div>\n          <div className={styles['relative']}>\n            <button\n              onClick={handleCopyToClipboard}\n              className={`${styles['w-full']} ${styles['bg-gray-100']} ${styles['hover:bg-gray-200']} ${styles['text-gray-800']} ${styles['py-2']} ${styles.rounded} ${styles['mb-2']}`}\n            >\n              Copy Scaled Recipe to Clipboard\n            </button>\n            {notification && (\n              <div className={`${styles['notification']} ${styles['text-center']}`}>\n                {notification}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className={`${styles['text-center']} ${styles['text-gray-400']} ${styles['text-sm']} ${styles['mt-4']}`}>\n        Vibe-coded by Cantor Soule-Reeves and Daniel Reeves in{' '}\n        <a \n          href=\"https://claude.ai\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className={styles['hover:text-gray-600']}\n        >\n          Claude\n        </a>\n        {' '}and{' '}\n        <a \n          href=\"https://codebuff.com/referrals/ref-146ce36c-53e8-435c-a7f6-e180206dd0ee\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className={styles['hover:text-gray-600']}\n          title=\"Referral link that gets you (and me, dreev) free credits\"\n        >\n          Codebuff\n        </a>\n        <div className={`${styles['text-gray-300']} ${styles['text-xs']} ${styles['mt-1']}`}>\n          v{require('../package.json').version}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeScaler;\n","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css'; // Commented out this line\n\nimport RecipeScaler from './Reciplier';\n\nfunction App() {\n  return (\n    <div> \n      <RecipeScaler />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals'; // Commented out for testing\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(); // Commented out for testing\n"],"sourceRoot":""}